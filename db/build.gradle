buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

group = 'ee.iti0208.sidewalk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

dependencies {
	compile('org.flywaydb:flyway-core')
	compile('org.springframework.boot:spring-boot-starter-jooq')
	compile('org.jooq:jooq-codegen')
	compile('org.jooq:jooq-meta')
	compile('org.mariadb.jdbc:mariadb-java-client:2.2.0')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')

}

def generatedSourcesDir = file('src/generated/java')
sourceSets.main.java.srcDir generatedSourcesDir
idea {
	module {
		generatedSourceDirs += generatedSourcesDir
	}
}

clean.doFirst {
	delete '' + projectDir + '/src/generated/java/'
}

bootRun.systemProperties = System.properties as Map<String, ?>
bootRun.systemProperties['user.dir'] = projectDir
bootRun.systemProperties['spring.config.location'] = 'file:' + rootProject.projectDir + '/config/'

task compileGenerated(type: JavaCompile, dependsOn: 'bootRun') {
	source = fileTree(dir: 'src/generated/java', include: '**/*.java')
	destinationDir = file('build/classes/main')
	classpath = sourceSets.main.compileClasspath
}

classes.finalizedBy bootRun
bootRun.finalizedBy compileGenerated

